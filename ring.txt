function ring_segment(parameters)
{
    r_start = parameters._start;
    r_end = parameters.r_end;
    offset_start = parameters.offset_start;
    offset_end = parameters.offset_end;
    shape_start = parameters.shape_start;
    shape_end = parameters.shape_end;
    angle_start = parameters.angle_start;
    angle_end = parameters.angle_end;
    position_start = parameters.position_start;
    position_end = parameters.position_end;
    no_of_segments = parameters.no_of_segments;
    
    r_increment = (r_end - r_start)/no_of_segments;
    offset_increment = (offset_end - offset_start)/no_of_segments;
    angle_increment = (angle_end - angle_start)/no_of_segments;
    position_increment = (position_end - position_start)/no_of_segments;
    
    
    for(var i = 0; i < no_of_segments; i++)
    {
        
    }
    points = [];
    triangles = [];
    
    return [points, triangles];
}

function ring()
{
    p = [ [10,10,0],[10,-10,0],[-10,-10,0],[-10,10,0], // the four points at base
            [0,0,10] ];
            
    t = [ [0,1,4],[1,2,4],[2,3,4],[3,0,4],          // each triangle side
               [1,0,3],[2,1,3] ];
    
    return polyhedron({points:p, triangles:t});
}

function main () {
  return ring();
}
